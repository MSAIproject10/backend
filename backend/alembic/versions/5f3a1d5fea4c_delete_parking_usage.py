"""Delete parking_usage

Revision ID: 5f3a1d5fea4c
Revises: 5b4b70db445f
Create Date: 2025-06-03 16:07:41.404981

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision: str = '5f3a1d5fea4c'
down_revision: Union[str, None] = '5b4b70db445f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('parking_record_table')
    op.add_column('parking_usage_table', sa.Column('ocr_detected', sa.Unicode(length=15), nullable=True))
    op.add_column('parking_usage_table', sa.Column('is_verified', sa.Boolean(), nullable=False))
    op.alter_column('parking_usage_table', 'entry_time',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('parking_usage_table', 'exit_time',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('parking_usage_table', 'total_fee',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('parking_usage_table', 'total_fee',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('parking_usage_table', 'exit_time',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('parking_usage_table', 'entry_time',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_column('parking_usage_table', 'is_verified')
    op.drop_column('parking_usage_table', 'ocr_detected')
    op.create_table('parking_record_table',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('parking_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('entry_time', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.Column('exit_time', sa.DATETIME(), autoincrement=False, nullable=True),
    sa.Column('ocr_detected', sa.NVARCHAR(length=15, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('is_verified', mssql.BIT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['parking_id'], ['parking.id'], name=op.f('FK__parking_r__parki__72910220')),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle_table.vehicle_id'], name=op.f('FK__parking_r__vehic__73852659')),
    sa.PrimaryKeyConstraint('id', name=op.f('PK__parking___3213E83FEAF4DB22'))
    )
    # ### end Alembic commands ###
